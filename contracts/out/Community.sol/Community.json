{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_communityToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_soulboundToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "communityToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinCommunity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "netAmount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "onTransfer",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soulboundToken",
      "outputs": [
        {
          "internalType": "contract SoulBoundToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000ae838038062000ae88339810160408190526200003491620000a9565b600062000042848262000232565b50600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905550620002fe565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000a457600080fd5b919050565b600080600060608486031215620000bf57600080fd5b83516001600160401b0380821115620000d757600080fd5b818601915086601f830112620000ec57600080fd5b81518181111562000101576200010162000076565b604051601f8201601f19908116603f011681019083821181831017156200012c576200012c62000076565b816040528281526020935089848487010111156200014957600080fd5b600091505b828210156200016d57848201840151818301850152908301906200014e565b6000848483010152809750505050620001888187016200008c565b935050506200019a604085016200008c565b90509250925092565b600181811c90821680620001b857607f821691505b602082108103620001d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022d57600081815260208120601f850160051c81016020861015620002085750805b601f850160051c820191505b81811015620002295782815560010162000214565b5050505b505050565b81516001600160401b038111156200024e576200024e62000076565b62000266816200025f8454620001a3565b84620001df565b602080601f8311600181146200029e5760008415620002855750858301515b600019600386901b1c1916600185901b17855562000229565b600085815260208120601f198616915b82811015620002cf57888601518255948401946001909101908401620002ae565b5085821015620002ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107da806200030e6000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80632e1a7d4d1161005b5780632e1a7d4d146100d45780634a393149146100e7578063a719249214610113578063b33b9cf91461012657600080fd5b8062b16fee1461008157806306fdde031461008b57806329aa1617146100a9575b600080fd5b610089610154565b005b610093610271565b6040516100a091906105dd565b60405180910390f35b6001546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b6100896100e236600461062b565b6102ff565b6100fa6100f5366004610660565b61048f565b6040516001600160e01b031990911681526020016100a0565b6002546100bc906001600160a01b031681565b61014661013436600461069c565b60036020526000908152604090205481565b6040519081526020016100a0565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c091906106be565b156102125760405162461bcd60e51b815260206004820152601d60248201527f536f756c426f756e64546f6b656e20616c72656164792065786973747300000060448201526064015b60405180910390fd5b6002546040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b50505050565b6000805461027e906106d7565b80601f01602080910402602001604051908101604052809291908181526020018280546102aa906106d7565b80156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b505050505081565b33600090815260036020526040902080548290039081905561032090610727565b6001546040516370a0823160e01b81523060048201526064916001600160a01b0316906370a0823190602401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d91906106be565b610398906014610743565b6103a29190610760565b12156104165760405162461bcd60e51b815260206004820152603860248201527f496e646976696475616c2063616e6e6f7420626f72726f77206d6f726520746860448201527f616e20323025206f662074686520746f74616c2066756e6400000000000000006064820152608401610209565b60015460405163a9059cbb60e01b8152306004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610782565b5050565b6001546000906001600160a01b038581169116146104ac57600080fd5b6002546040516370a0823160e01b81526001600160a01b03858116600483015260019216906370a0823190602401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b91906106be565b10156105755760405162461bcd60e51b8152602060048201526024808201527f436f6d6d756e69747920536f756c426f756e64546f6b656e206e6f74207072656044820152631cd95b9d60e21b6064820152608401610209565b6001600160a01b03831660008181526003602052604090819020805485019055517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906105c59085815260200190565b60405180910390a250634a39314960e01b9392505050565b600060208083528351808285015260005b8181101561060a578581018301518582016040015282016105ee565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561063d57600080fd5b5035919050565b80356001600160a01b038116811461065b57600080fd5b919050565b60008060006060848603121561067557600080fd5b61067e84610644565b925061068c60208501610644565b9150604084013590509250925092565b6000602082840312156106ae57600080fd5b6106b782610644565b9392505050565b6000602082840312156106d057600080fd5b5051919050565b600181811c908216806106eb57607f821691505b60208210810361070b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161073c5761073c610711565b5060000390565b808202811582820484141761075a5761075a610711565b92915050565b60008261077d57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561079457600080fd5b815180151581146106b757600080fdfea26469706673582212202edf260db41684738cab83a7ecbc15213831baec781e017104ab3c8c1dc2de8c64736f6c63430008110033",
    "sourceMap": "144:1642:2:-:0;;;458:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;551:4;:12;558:5;551:4;:12;:::i;:::-;-1:-1:-1;573:14:2;:47;;-1:-1:-1;;;;;573:47:2;;;-1:-1:-1;;;;;;573:47:2;;;;;;;630:14;:48;;;;;;;;;;;-1:-1:-1;144:1642:2;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:6;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1214::-;426:6;434;442;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;538:16;;-1:-1:-1;;;;;603:14:6;;;600:34;;;630:1;627;620:12;600:34;668:6;657:9;653:22;643:32;;713:7;706:4;702:2;698:13;694:27;684:55;;735:1;732;725:12;684:55;764:2;758:9;786:2;782;779:10;776:36;;;792:18;;:::i;:::-;867:2;861:9;835:2;921:13;;-1:-1:-1;;917:22:6;;;941:2;913:31;909:40;897:53;;;965:18;;;985:22;;;962:46;959:72;;;1011:18;;:::i;:::-;1051:10;1047:2;1040:22;1086:2;1078:6;1071:18;1108:4;1098:14;;1149:7;1144:2;1139;1135;1131:11;1127:20;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1192:1;1183:10;;1202:129;1216:2;1213:1;1210:9;1202:129;;;1304:10;;;1300:19;;1294:26;1273:14;;;1269:23;;1262:59;1227:10;;;;1202:129;;;1373:1;1368:2;1363;1355:6;1351:15;1347:24;1340:35;1394:6;1384:16;;;;;1419:49;1464:2;1453:9;1449:18;1419:49;:::i;:::-;1409:59;;;;1487:49;1532:2;1521:9;1517:18;1487:49;:::i;:::-;1477:59;;328:1214;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:545::-;2160:2;2155:3;2152:11;2149:448;;;2196:1;2221:5;2217:2;2210:17;2266:4;2262:2;2252:19;2336:2;2324:10;2320:19;2317:1;2313:27;2307:4;2303:38;2372:4;2360:10;2357:20;2354:47;;;-1:-1:-1;2395:4:6;2354:47;2450:2;2445:3;2441:12;2438:1;2434:20;2428:4;2424:31;2414:41;;2505:82;2523:2;2516:5;2513:13;2505:82;;;2568:17;;;2549:1;2538:13;2505:82;;;2509:3;;;2149:448;2058:545;;;:::o;2779:1352::-;2899:10;;-1:-1:-1;;;;;2921:30:6;;2918:56;;;2954:18;;:::i;:::-;2983:97;3073:6;3033:38;3065:4;3059:11;3033:38;:::i;:::-;3027:4;2983:97;:::i;:::-;3135:4;;3199:2;3188:14;;3216:1;3211:663;;;;3918:1;3935:6;3932:89;;;-1:-1:-1;3987:19:6;;;3981:26;3932:89;-1:-1:-1;;2736:1:6;2732:11;;;2728:24;2724:29;2714:40;2760:1;2756:11;;;2711:57;4034:81;;3181:944;;3211:663;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3247:20:6;;;3365:236;3379:7;3376:1;3373:14;3365:236;;;3468:19;;;3462:26;3447:42;;3560:27;;;;3528:1;3516:14;;;;3395:19;;3365:236;;;3369:3;3629:6;3620:7;3617:19;3614:201;;;3690:19;;;3684:26;-1:-1:-1;;3773:1:6;3769:14;;;3785:3;3765:24;3761:37;3757:42;3742:58;3727:74;;3614:201;-1:-1:-1;;;;;3861:1:6;3845:14;;;3841:22;3828:36;;-1:-1:-1;2779:1352:6:o;:::-;144:1642:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007c5760003560e01c80632e1a7d4d1161005b5780632e1a7d4d146100d45780634a393149146100e7578063a719249214610113578063b33b9cf91461012657600080fd5b8062b16fee1461008157806306fdde031461008b57806329aa1617146100a9575b600080fd5b610089610154565b005b610093610271565b6040516100a091906105dd565b60405180910390f35b6001546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b6100896100e236600461062b565b6102ff565b6100fa6100f5366004610660565b61048f565b6040516001600160e01b031990911681526020016100a0565b6002546100bc906001600160a01b031681565b61014661013436600461069c565b60036020526000908152604090205481565b6040519081526020016100a0565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c091906106be565b156102125760405162461bcd60e51b815260206004820152601d60248201527f536f756c426f756e64546f6b656e20616c72656164792065786973747300000060448201526064015b60405180910390fd5b6002546040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b50505050565b6000805461027e906106d7565b80601f01602080910402602001604051908101604052809291908181526020018280546102aa906106d7565b80156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b505050505081565b33600090815260036020526040902080548290039081905561032090610727565b6001546040516370a0823160e01b81523060048201526064916001600160a01b0316906370a0823190602401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d91906106be565b610398906014610743565b6103a29190610760565b12156104165760405162461bcd60e51b815260206004820152603860248201527f496e646976696475616c2063616e6e6f7420626f72726f77206d6f726520746860448201527f616e20323025206f662074686520746f74616c2066756e6400000000000000006064820152608401610209565b60015460405163a9059cbb60e01b8152306004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610782565b5050565b6001546000906001600160a01b038581169116146104ac57600080fd5b6002546040516370a0823160e01b81526001600160a01b03858116600483015260019216906370a0823190602401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b91906106be565b10156105755760405162461bcd60e51b8152602060048201526024808201527f436f6d6d756e69747920536f756c426f756e64546f6b656e206e6f74207072656044820152631cd95b9d60e21b6064820152608401610209565b6001600160a01b03831660008181526003602052604090819020805485019055517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906105c59085815260200190565b60405180910390a250634a39314960e01b9392505050565b600060208083528351808285015260005b8181101561060a578581018301518582016040015282016105ee565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561063d57600080fd5b5035919050565b80356001600160a01b038116811461065b57600080fd5b919050565b60008060006060848603121561067557600080fd5b61067e84610644565b925061068c60208501610644565b9150604084013590509250925092565b6000602082840312156106ae57600080fd5b6106b782610644565b9392505050565b6000602082840312156106d057600080fd5b5051919050565b600181811c908216806106eb57607f821691505b60208210810361070b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161073c5761073c610711565b5060000390565b808202811582820484141761075a5761075a610711565b92915050565b60008261077d57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561079457600080fd5b815180151581146106b757600080fdfea26469706673582212202edf260db41684738cab83a7ecbc15213831baec781e017104ab3c8c1dc2de8c64736f6c63430008110033",
    "sourceMap": "144:1642:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:176;;;:::i;:::-;;194:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:27;;;;;-1:-1:-1;;;;;218:27:2;;;;;;-1:-1:-1;;;;;744:32:6;;;726:51;;714:2;699:18;218:27:2;567:216:6;691:388:2;;;;;;:::i;:::-;;:::i;1085:517::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1646:33:6;;;1628:52;;1616:2;1601:18;1085:517:2;1484:202:6;251:36:2;;;;;-1:-1:-1;;;;;251:36:2;;;294:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2257:25:6;;;2245:2;2230:18;294:43:2;2113:175:6;1608:176:2;1660:14;;:36;;-1:-1:-1;;;1660:36:2;;1685:10;1660:36;;;726:51:6;-1:-1:-1;;;;;1660:14:2;;;;:24;;699:18:6;;1660:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;1652:83;;;;-1:-1:-1;;;1652:83:2;;2892:2:6;1652:83:2;;;2874:21:6;2931:2;2911:18;;;2904:30;2970:31;2950:18;;;2943:59;3019:18;;1652:83:2;;;;;;;;;1746:14;;:31;;-1:-1:-1;;;1746:31:2;;1766:10;1746:31;;;726:51:6;-1:-1:-1;;;;;1746:14:2;;;;:19;;699:18:6;;1746:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:176::o;194:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;691:388::-;778:10;768:21;;;;:9;:21;;;;;:39;;;;;;;;;911:22;;;:::i;:::-;856:14;;:39;;-1:-1:-1;;;856:39:2;;889:4;856:39;;;726:51:6;903:3:2;;-1:-1:-1;;;;;856:14:2;;:24;;699:18:6;;856:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;898:2;856:44;:::i;:::-;:50;;;;:::i;:::-;849:84;;828:187;;;;-1:-1:-1;;;828:187:2;;4303:2:6;828:187:2;;;4285:21:6;4342:2;4322:18;;;4315:30;4381:34;4361:18;;;4354:62;4452:26;4432:18;;;4425:54;4496:19;;828:187:2;4101:420:6;828:187:2;1026:14;;:46;;-1:-1:-1;;;1026:46:2;;1058:4;1026:46;;;4700:51:6;4767:18;;;4760:34;;;-1:-1:-1;;;;;1026:14:2;;;;:23;;4673:18:6;;1026:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;691:388;:::o;1085:517::-;1265:14;;1177:6;;-1:-1:-1;;;;;1248:32:2;;;1265:14;;1248:32;1240:41;;;;;;1300:14;;:30;;-1:-1:-1;;;1300:30:2;;-1:-1:-1;;;;;744:32:6;;;1300:30:2;;;726:51:6;1334:1:2;;1300:14;;:24;;699:18:6;;1300:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;1292:84;;;;-1:-1:-1;;;1292:84:2;;5289:2:6;1292:84:2;;;5271:21:6;5328:2;5308:18;;;5301:30;5367:34;5347:18;;;5340:62;-1:-1:-1;;;5418:18:6;;;5411:34;5462:19;;1292:84:2;5087:400:6;1292:84:2;-1:-1:-1;;;;;1456:15:2;;;;;;:9;:15;;;;;;;:33;;;;;;1515:21;;;;;1482:6;2257:25:6;;2245:2;2230:18;;2113:175;1515:21:2;;;;;;;;-1:-1:-1;;;;1085:517:2;;;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;788:180::-;847:6;900:2;888:9;879:7;875:23;871:32;868:52;;;916:1;913;906:12;868:52;-1:-1:-1;939:23:6;;788:180;-1:-1:-1;788:180:6:o;973:173::-;1041:20;;-1:-1:-1;;;;;1090:31:6;;1080:42;;1070:70;;1136:1;1133;1126:12;1070:70;973:173;;;:::o;1151:328::-;1228:6;1236;1244;1297:2;1285:9;1276:7;1272:23;1268:32;1265:52;;;1313:1;1310;1303:12;1265:52;1336:29;1355:9;1336:29;:::i;:::-;1326:39;;1384:38;1418:2;1407:9;1403:18;1384:38;:::i;:::-;1374:48;;1469:2;1458:9;1454:18;1441:32;1431:42;;1151:328;;;;;:::o;1922:186::-;1981:6;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;2073:29;2092:9;2073:29;:::i;:::-;2063:39;1922:186;-1:-1:-1;;;1922:186:6:o;2501:184::-;2571:6;2624:2;2612:9;2603:7;2599:23;2595:32;2592:52;;;2640:1;2637;2630:12;2592:52;-1:-1:-1;2663:16:6;;2501:184;-1:-1:-1;2501:184:6:o;3048:380::-;3127:1;3123:12;;;;3170;;;3191:61;;3245:4;3237:6;3233:17;3223:27;;3191:61;3298:2;3290:6;3287:14;3267:18;3264:38;3261:161;;3344:10;3339:3;3335:20;3332:1;3325:31;3379:4;3376:1;3369:15;3407:4;3404:1;3397:15;3261:161;;3048:380;;;:::o;3433:127::-;3494:10;3489:3;3485:20;3482:1;3475:31;3525:4;3522:1;3515:15;3549:4;3546:1;3539:15;3565:136;3600:3;-1:-1:-1;;;3621:22:6;;3618:48;;3646:18;;:::i;:::-;-1:-1:-1;3686:1:6;3682:13;;3565:136::o;3706:168::-;3779:9;;;3810;;3827:15;;;3821:22;;3807:37;3797:71;;3848:18;;:::i;:::-;3706:168;;;;:::o;3879:217::-;3919:1;3945;3935:132;;3989:10;3984:3;3980:20;3977:1;3970:31;4024:4;4021:1;4014:15;4052:4;4049:1;4042:15;3935:132;-1:-1:-1;4081:9:6;;3879:217::o;4805:277::-;4872:6;4925:2;4913:9;4904:7;4900:23;4896:32;4893:52;;;4941:1;4938;4931:12;4893:52;4973:9;4967:16;5026:5;5019:13;5012:21;5005:5;5002:32;4992:60;;5048:1;5045;5038:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "communityToken()": "29aa1617",
    "joinCommunity()": "00b16fee",
    "name()": "06fdde03",
    "netAmount(address)": "b33b9cf9",
    "onTransfer(address,address,uint256)": "4a393149",
    "soulboundToken()": "a7192492",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_communityToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_soulboundToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"communityToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"netAmount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soulboundToken\",\"outputs\":[{\"internalType\":\"contract SoulBoundToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/Community.sol\":\"Community\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/core/Community.sol\":{\"keccak256\":\"0x2b7255b38155c038ef90c2711069acc7d5678190f047625232f2cee9b1f94f7a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8b7fa18161ab8a51ada37071a7acc87f229d4e0a2a213e2cde300a260a7ca9da\",\"dweb:/ipfs/Qmbxe2Bap86LzK2j3Ry4SbtLMkrFS88omdJz6AjFgVrJHN\"]},\"src/tokens/CallbackERC20.sol\":{\"keccak256\":\"0xd6d0363663364e1406106f692b054cc3e4981ebb2d972c33d3924b7fc262b577\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0ea12d870705106e86ee8b21fbd897de2a1036ee1227b5bacf4c3aa29359a65d\",\"dweb:/ipfs/QmWuh9twLsysZvcR8TJwnposRCBZ91zJ7ebZaf8WhHZBhL\"]},\"src/tokens/SoulBoundToken.sol\":{\"keccak256\":\"0xe630c3a373d1dfcb8a079f214adc47cd59dc51f9b7f7e64198da373a11553e59\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8b64723aad9f06f38eac67d4488d4c48b42a14e1d90e46b6850fe06a86279bb9\",\"dweb:/ipfs/QmS3YYW4Vu8cTSutm1jz6VvXsJ5snpKRi1VmRhhSc3Bpfs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_communityToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_soulboundToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "communityToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "joinCommunity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "netAmount",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTransfer",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "soulboundToken",
          "outputs": [
            {
              "internalType": "contract SoulBoundToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/core/Community.sol": "Community"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/Community.sol": {
        "keccak256": "0x2b7255b38155c038ef90c2711069acc7d5678190f047625232f2cee9b1f94f7a",
        "urls": [
          "bzz-raw://8b7fa18161ab8a51ada37071a7acc87f229d4e0a2a213e2cde300a260a7ca9da",
          "dweb:/ipfs/Qmbxe2Bap86LzK2j3Ry4SbtLMkrFS88omdJz6AjFgVrJHN"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/CallbackERC20.sol": {
        "keccak256": "0xd6d0363663364e1406106f692b054cc3e4981ebb2d972c33d3924b7fc262b577",
        "urls": [
          "bzz-raw://0ea12d870705106e86ee8b21fbd897de2a1036ee1227b5bacf4c3aa29359a65d",
          "dweb:/ipfs/QmWuh9twLsysZvcR8TJwnposRCBZ91zJ7ebZaf8WhHZBhL"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/SoulBoundToken.sol": {
        "keccak256": "0xe630c3a373d1dfcb8a079f214adc47cd59dc51f9b7f7e64198da373a11553e59",
        "urls": [
          "bzz-raw://8b64723aad9f06f38eac67d4488d4c48b42a14e1d90e46b6850fe06a86279bb9",
          "dweb:/ipfs/QmS3YYW4Vu8cTSutm1jz6VvXsJ5snpKRi1VmRhhSc3Bpfs"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/core/Community.sol",
    "id": 1133,
    "exportedSymbols": {
      "CallbackERC20": [
        1285
      ],
      "CallbackERC20Receiver": [
        1302
      ],
      "Community": [
        1132
      ],
      "ERC20": [
        387
      ],
      "ERC721": [
        931
      ],
      "ERC721TokenReceiver": [
        951
      ],
      "SoulBoundToken": [
        1375
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:1747:2",
    "nodes": [
      {
        "id": 953,
        "nodeType": "PragmaDirective",
        "src": "40:24:2",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 954,
        "nodeType": "ImportDirective",
        "src": "66:37:2",
        "absolutePath": "src/tokens/CallbackERC20.sol",
        "file": "../tokens/CallbackERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1133,
        "sourceUnit": 1303,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 955,
        "nodeType": "ImportDirective",
        "src": "104:38:2",
        "absolutePath": "src/tokens/SoulBoundToken.sol",
        "file": "../tokens/SoulBoundToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1133,
        "sourceUnit": 1376,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1132,
        "nodeType": "ContractDefinition",
        "src": "144:1642:2",
        "nodes": [
          {
            "id": 959,
            "nodeType": "VariableDeclaration",
            "src": "194:18:2",
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "208:4:2",
            "scope": 1132,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 958,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "194:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 962,
            "nodeType": "VariableDeclaration",
            "src": "218:27:2",
            "constant": false,
            "functionSelector": "29aa1617",
            "mutability": "mutable",
            "name": "communityToken",
            "nameLocation": "231:14:2",
            "scope": 1132,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$387",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 961,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 960,
                "name": "ERC20",
                "nameLocations": [
                  "218:5:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 387,
                "src": "218:5:2"
              },
              "referencedDeclaration": 387,
              "src": "218:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$387",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 965,
            "nodeType": "VariableDeclaration",
            "src": "251:36:2",
            "constant": false,
            "functionSelector": "a7192492",
            "mutability": "mutable",
            "name": "soulboundToken",
            "nameLocation": "273:14:2",
            "scope": 1132,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
              "typeString": "contract SoulBoundToken"
            },
            "typeName": {
              "id": 964,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 963,
                "name": "SoulBoundToken",
                "nameLocations": [
                  "251:14:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1375,
                "src": "251:14:2"
              },
              "referencedDeclaration": 1375,
              "src": "251:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                "typeString": "contract SoulBoundToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 969,
            "nodeType": "VariableDeclaration",
            "src": "294:43:2",
            "constant": false,
            "functionSelector": "b33b9cf9",
            "mutability": "mutable",
            "name": "netAmount",
            "nameLocation": "328:9:2",
            "scope": 1132,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
              "typeString": "mapping(address => int256)"
            },
            "typeName": {
              "id": 968,
              "keyType": {
                "id": 966,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "294:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                "typeString": "mapping(address => int256)"
              },
              "valueType": {
                "id": 967,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "313:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 975,
            "nodeType": "EventDefinition",
            "src": "344:52:2",
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "name": "Deposit",
            "nameLocation": "350:7:2",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "374:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "358:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "388:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "380:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:38:2"
            }
          },
          {
            "id": 981,
            "nodeType": "EventDefinition",
            "src": "401:51:2",
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "name": "Withdraw",
            "nameLocation": "407:8:2",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "432:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "416:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "444:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "436:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:36:2"
            }
          },
          {
            "id": 1007,
            "nodeType": "FunctionDefinition",
            "src": "458:227:2",
            "body": {
              "id": 1006,
              "nodeType": "Block",
              "src": "541:144:2",
              "statements": [
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 990,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "551:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 991,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "558:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "551:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "551:12:2"
                },
                {
                  "expression": {
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 994,
                      "name": "communityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 962,
                      "src": "573:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$387",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 996,
                          "name": "_communityToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "604:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 995,
                        "name": "CallbackERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1285,
                        "src": "590:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallbackERC20_$1285_$",
                          "typeString": "type(contract CallbackERC20)"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "590:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CallbackERC20_$1285",
                        "typeString": "contract CallbackERC20"
                      }
                    },
                    "src": "573:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$387",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "573:47:2"
                },
                {
                  "expression": {
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1000,
                      "name": "soulboundToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "630:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                        "typeString": "contract SoulBoundToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1002,
                          "name": "_soulboundToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "662:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1001,
                        "name": "SoulBoundToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "647:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SoulBoundToken_$1375_$",
                          "typeString": "type(contract SoulBoundToken)"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "647:31:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                        "typeString": "contract SoulBoundToken"
                      }
                    },
                    "src": "630:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                      "typeString": "contract SoulBoundToken"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "630:48:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "484:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "470:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "_communityToken",
                  "nameLocation": "499:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "491:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "_soulboundToken",
                  "nameLocation": "524:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "516:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:71:2"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:2"
            },
            "scope": 1132,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1058,
            "nodeType": "FunctionDefinition",
            "src": "691:388:2",
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "734:345:2",
              "statements": [
                {
                  "id": 1022,
                  "nodeType": "UncheckedBlock",
                  "src": "744:74:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1012,
                            "name": "netAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "768:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 1015,
                          "indexExpression": {
                            "expression": {
                              "id": 1013,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "778:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "782:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "778:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "768:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1018,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "800:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "793:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 1016,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "793:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "768:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 1021,
                      "nodeType": "ExpressionStatement",
                      "src": "768:39:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1030,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "889:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Community_$1132",
                                            "typeString": "contract Community"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Community_$1132",
                                            "typeString": "contract Community"
                                          }
                                        ],
                                        "id": 1029,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "881:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1028,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "881:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1031,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "881:13:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1026,
                                      "name": "communityToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 962,
                                      "src": "856:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$387",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "871:9:2",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "856:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "856:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3230",
                                  "id": 1033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "898:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_20_by_1",
                                    "typeString": "int_const 20"
                                  },
                                  "value": "20"
                                },
                                "src": "856:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "903:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "856:50:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "849:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 1024,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "849:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "849:58:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "911:22:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1038,
                              "name": "netAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "912:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                                "typeString": "mapping(address => int256)"
                              }
                            },
                            "id": 1041,
                            "indexExpression": {
                              "expression": {
                                "id": 1039,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "922:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "926:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "922:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "912:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "849:84:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646976696475616c2063616e6e6f7420626f72726f77206d6f7265207468616e20323025206f662074686520746f74616c2066756e64",
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "947:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48401456fc96bd2ff34ea236b7849820220066cbcc0c187dfbaa7e257f0e9f33",
                          "typeString": "literal_string \"Individual cannot borrow more than 20% of the total fund\""
                        },
                        "value": "Individual cannot borrow more than 20% of the total fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48401456fc96bd2ff34ea236b7849820220066cbcc0c187dfbaa7e257f0e9f33",
                          "typeString": "literal_string \"Individual cannot borrow more than 20% of the total fund\""
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "828:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:187:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "828:187:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1058:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1132",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1132",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1050:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1050:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1050:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1054,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1065:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1047,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "1026:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$387",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1041:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137,
                      "src": "1026:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:46:2"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "700:8:2",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "717:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "709:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:16:2"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:2"
            },
            "scope": 1132,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1109,
            "nodeType": "FunctionDefinition",
            "src": "1085:517:2",
            "body": {
              "id": 1108,
              "nodeType": "Block",
              "src": "1185:417:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1071,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1060,
                          "src": "1248:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1074,
                              "name": "communityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "1265:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$387",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$387",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1257:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1072,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1257:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1257:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1248:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1240:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1082,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "1325:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1080,
                              "name": "soulboundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "1300:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                                "typeString": "contract SoulBoundToken"
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1315:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 478,
                            "src": "1300:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1300:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1334:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1300:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d756e69747920536f756c426f756e64546f6b656e206e6f742070726573656e74",
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1337:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bc2532f1b27c9f3fcc881fc712d782af7fb6977859462caa7feba10e3a7723",
                          "typeString": "literal_string \"Community SoulBoundToken not present\""
                        },
                        "value": "Community SoulBoundToken not present"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bc2532f1b27c9f3fcc881fc712d782af7fb6977859462caa7feba10e3a7723",
                          "typeString": "literal_string \"Community SoulBoundToken not present\""
                        }
                      ],
                      "id": 1079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1292:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:84:2"
                },
                {
                  "id": 1098,
                  "nodeType": "UncheckedBlock",
                  "src": "1432:68:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1089,
                            "name": "netAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "1456:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 1091,
                          "indexExpression": {
                            "id": 1090,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1466:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1456:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1094,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "1482:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1475:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 1092,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1475:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1475:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "1456:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 1097,
                      "nodeType": "ExpressionStatement",
                      "src": "1456:33:2"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1100,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "1523:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1101,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1529:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1099,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "1515:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "EmitStatement",
                  "src": "1510:26:2"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 1104,
                        "name": "CallbackERC20Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1554:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallbackERC20Receiver_$1302_$",
                          "typeString": "type(contract CallbackERC20Receiver)"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1576:10:2",
                      "memberName": "onTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1301,
                      "src": "1554:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes4_$",
                        "typeString": "function CallbackERC20Receiver.onTransfer(address,address,uint256) returns (bytes4)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1587:8:2",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "1554:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1069,
                  "id": 1107,
                  "nodeType": "Return",
                  "src": "1547:48:2"
                }
              ]
            },
            "baseFunctions": [
              1301
            ],
            "functionSelector": "4a393149",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTransfer",
            "nameLocation": "1094:10:2",
            "overrides": {
              "id": 1066,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1159:8:2"
            },
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1113:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "1105:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1062,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1128:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "1120:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "1134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1104:45:2"
            },
            "returnParameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "1177:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:8:2"
            },
            "scope": 1132,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1131,
            "nodeType": "FunctionDefinition",
            "src": "1608:176:2",
            "body": {
              "id": 1130,
              "nodeType": "Block",
              "src": "1642:142:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1115,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1685:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1689:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1685:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1113,
                              "name": "soulboundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "1660:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                                "typeString": "contract SoulBoundToken"
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1675:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 478,
                            "src": "1660:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1700:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1660:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c426f756e64546f6b656e20616c726561647920657869737473",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39ae35ab61513f1bec4c9dc25558edce0665b3c80fb5030c92f9bc706d39e6eb",
                          "typeString": "literal_string \"SoulBoundToken already exists\""
                        },
                        "value": "SoulBoundToken already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39ae35ab61513f1bec4c9dc25558edce0665b3c80fb5030c92f9bc706d39e6eb",
                          "typeString": "literal_string \"SoulBoundToken already exists\""
                        }
                      ],
                      "id": 1112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1652:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:83:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1766:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1770:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1766:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1123,
                        "name": "soulboundToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1746:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SoulBoundToken_$1375",
                          "typeString": "contract SoulBoundToken"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1761:4:2",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1347,
                      "src": "1746:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:31:2"
                }
              ]
            },
            "functionSelector": "00b16fee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinCommunity",
            "nameLocation": "1617:13:2",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:2:2"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:0:2"
            },
            "scope": 1132,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 956,
              "name": "CallbackERC20Receiver",
              "nameLocations": [
                "166:21:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1302,
              "src": "166:21:2"
            },
            "id": 957,
            "nodeType": "InheritanceSpecifier",
            "src": "166:21:2"
          }
        ],
        "canonicalName": "Community",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1132,
          1302
        ],
        "name": "Community",
        "nameLocation": "153:9:2",
        "scope": 1133,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 2
}